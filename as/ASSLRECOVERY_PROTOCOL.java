package generatedbyassl.as;

import java.util.Vector;
import java.util.Enumeration;

/**
 * Generated by ASSL Framework
 * 
 * This is the superclass for all ASSL AE RECOVERY_PROTOCOL.
 */
public class ASSLRECOVERY_PROTOCOL
	implements  ASSLEVENTCATCHER
{

	/**
	 * Generated by ASSL Framework
	 * 
	 * The protocol's logging file name .
	 */
	protected String LOG_NAME = "ae_log_record.txt";
	/**
	 * Generated by ASSL Framework
	 * 
	 * The protocol's logging record, .i.e., determines the message parts to be stored.
	 */
	protected Vector<String> LOG_RECORD = new Vector<String>();
	/**
	 * Generated by ASSL Framework
	 * 
	 * Events that initiate this recovery protocol.
	 */
	protected Vector<ASSLEVENT> vInitiatedByEvents = new Vector<ASSLEVENT>();
	/**
	 * Generated by ASSL Framework
	 * 
	 * Messages that this recovery protocol saves for recovery.
	 */
	protected Vector<ASSLMESSAGE> vSavesMessages = new Vector<ASSLMESSAGE>();

	/**
	 * Generated by ASSL Framework
	 * 
	 * This method notifies the ASSL event-catcher class that a specific event has been prompted.
	 */
	public synchronized void notifyForEvent ( ASSLEVENT poEvent )
	{
		Enumeration<ASSLEVENT> eEVENTS = vInitiatedByEvents.elements();
		ASSLEVENT currEvent = null;
		while ( eEVENTS.hasMoreElements() ) 
		{
			currEvent = eEVENTS.nextElement();
			if ( currEvent == poEvent ) 
			{
				//**** runs the protocol in saving mode
				save();
				break;
			}
		}
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * Runs the protocol in 'save' mode.
	 */
	public synchronized void save (  )
	{
		String sMsg = "RECOVERY_PROTOCOL '" + this.getClass().getName() + "': has run in 'save' mode";
		System.out.println( sMsg );
		//********************************************************
		//**** Implement this method!
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * Runs the protocol in 'recovery' mode.
	 */
	public synchronized void recovery (  )
	{
		String sMsg = "RECOVERY_PROTOCOL '" + this.getClass().getName() + "': has run in 'recovery' mode";
		System.out.println( sMsg );
		//********************************************************
		//**** Implement this method!
	}

}