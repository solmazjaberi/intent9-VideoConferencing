package generatedbyassl.as;

import java.util.Vector;
import java.util.Enumeration;

/**
 * Generated by ASSL Framework
 * 
 * This is the superclass for all ASSL messages.
 */
public class ASSLMESSAGE
{

	/**
	 * Generated by ASSL Framework
	 * 
	 * Events to be prompted when this message has been received.
	 */
	protected Vector<ASSLMESSAGECATCHER> vReceivedEvents = new Vector<ASSLMESSAGECATCHER>();
	/**
	 * Generated by ASSL Framework
	 * 
	 * Events to be prompted when this message has been sent.
	 */
	protected Vector<ASSLMESSAGECATCHER> vSentEvents = new Vector<ASSLMESSAGECATCHER>();
	/**
	 * Generated by ASSL Framework
	 * 
	 * Determines the message status: "0" - idle, "1" - received, "2" - sent.
	 */
	protected int iMessageStatus = 0;

	/**
	 * Generated by ASSL Framework
	 * 
	 * Checks whether the message has been received.
	 */
	public synchronized boolean isReceived (  )
	{
		return iMessageStatus == 1;
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * Checks whether the message has been sent.
	 */
	public synchronized boolean isSent (  )
	{
		return iMessageStatus == 2;
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * This method adds a new message-catcher class to the list of 'received message' events listening to that message.
	 */
	public synchronized void addMsgCatcherReceivedEvent ( ASSLMESSAGECATCHER pMsgCatcher )
	{
		vReceivedEvents.add(pMsgCatcher);
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * This method adds a new message-catcher class to the list of 'sent message' events listening to that message.
	 */
	public synchronized void addMsgCatcherSentEvent ( ASSLMESSAGECATCHER pMsgCatcher )
	{
		vSentEvents.add(pMsgCatcher);
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * Sets the message status: "0" - idle, "1" - received, "2" - sent.
	 */
	public synchronized void setMessageStatus ( int piMessageStatus )
	{
		if ( piMessageStatus < 0 ||
			 piMessageStatus > 2 ) 
		{
			piMessageStatus = 0; //**** "0" - idle
		}
		iMessageStatus = piMessageStatus;
		//************************************************************************
		//**** notifies the message catchers
		if ( iMessageStatus == 1  ) 
		{
			Enumeration<ASSLMESSAGECATCHER> eMessageCatchers = vReceivedEvents.elements();
			ASSLMESSAGECATCHER currMsgCatcher = null;
			while ( eMessageCatchers.hasMoreElements() ) 
			{
				currMsgCatcher = eMessageCatchers.nextElement();
				currMsgCatcher.notifyForReceivedMessage(this);
			}
		}
		if ( iMessageStatus == 2  ) 
		{
			Enumeration<ASSLMESSAGECATCHER> eMessageCatchers = vSentEvents.elements();
			ASSLMESSAGECATCHER currMsgCatcher = null;
			while ( eMessageCatchers.hasMoreElements() ) 
			{
				currMsgCatcher = eMessageCatchers.nextElement();
				currMsgCatcher.notifyForSentMessage(this);
			}
		}
	}

}