package generatedbyassl.as;

import java.util.Hashtable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;

/**
 * Generated by ASSL Framework
 * 
 * This is the superclass for all ASSL channels.
 */
public class ASSLCHANNEL
{

	/**
	 * Generated by ASSL Framework
	 * 
	 * Holds pairs 'message name'-'message reference' of all the messages specified by ASSLCHANNEL.
	 */
	protected Hashtable<String, ArrayList<ASSLMESSAGE>> MESSAGES = new Hashtable<String, ArrayList<ASSLMESSAGE>>();

	/**
	 * Generated by ASSL Framework
	 * 
	 * Gets a message specified by name.
	 */
	public ASSLMESSAGE getMessage ( String psMessageName )
	{
		ArrayList<ASSLMESSAGE> oMessages = MESSAGES.get(psMessageName);
		ASSLMESSAGE oMessage = null;
		//
		if ( oMessages != null ) 
		{
			if ( !oMessages.isEmpty() ) 
			{
				oMessage = oMessages.get(0);
				oMessages.remove(0);
			}
			if ( oMessages.isEmpty() ) 
			{
				MESSAGES.remove(psMessageName);
			}
			if ( oMessage != null ) 
			{
				oMessage.setMessageStatus(1); //**** "1" - received
			}
		}
		return oMessage;
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * Gets a message specified by index.
	 */
	public ASSLMESSAGE getMessage ( int piIndex )
	{
		Iterator<Map.Entry<String, ArrayList<ASSLMESSAGE>>> iMessages = MESSAGES.entrySet().iterator();
		Map.Entry<String, ArrayList<ASSLMESSAGE>> currMap = null;
		ASSLMESSAGE resultMessage = null;
		int iCounter = 0;
		//
		while ( iMessages.hasNext() ) 
		{
			currMap = iMessages.next();
			if ( piIndex == iCounter ) 
			{
				ArrayList<ASSLMESSAGE> oMessages = currMap.getValue();
				if ( !oMessages.isEmpty() ) 
				{
					resultMessage = oMessages.get(0);
					oMessages.remove(0);
					resultMessage.setMessageStatus(1); //**** "1" - received
				}
				if ( oMessages.isEmpty() ) 
				{
					MESSAGES.remove(currMap.getKey());
				}
				break;
			}
			iCounter++;
		}
		return resultMessage;
	}

	/**
	 * Generated by ASSL Framework
	 * 
	 * Puts a message into the channel.
	 */
	public void putMessage ( String psMessageName, ASSLMESSAGE poMessage )
	{
		if ( !MESSAGES.containsKey(psMessageName) ) 
		{
			ArrayList<ASSLMESSAGE> oMessages = new ArrayList<ASSLMESSAGE>();
			oMessages.add(poMessage);
			MESSAGES.put(psMessageName, oMessages);
		}
		else
		{
			ArrayList<ASSLMESSAGE> oMessages = MESSAGES.get(psMessageName);
			oMessages.add(poMessage);
		}
		poMessage.setMessageStatus(2); //**** "2" - sent
	}

}